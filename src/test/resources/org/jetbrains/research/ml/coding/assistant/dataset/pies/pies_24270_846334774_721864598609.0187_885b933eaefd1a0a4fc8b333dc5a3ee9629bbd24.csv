id,fragment,age,programExperience,testsResults,task
1364,"
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1368,"def f1():
    pass
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1369,"def f1():
    pass

if __name__ == '__main__':
    v1 = int
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1371,"def f1():
    pass

if __name__ == '__main__':
    v1 = int(input())
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1372,"def f1():
    pass

if __name__ == '__main__':
    v1 = int(input())
    v2 = int
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1374,"def f1():
    pass

if __name__ == '__main__':
    v1 = int(input())
    v2 = int(input())
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1375,"def f1():
    pass


if __name__ == '__main__':
    v1 = int(input())
    v2 = int(input())
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1376,"def f1():
    pass


if __name__ == '__main__':
    v1 = int(input())
    v2 = int(input())
    v3 = int",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1378,"def f1():
    pass


if __name__ == '__main__':
    v1 = int(input())
    v2 = int(input())
    v3 = int(input())",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1382,"def f1():
    pass


if __name__ == '__main__':
    v1 = int(input())
    v2 = int(input())
    v3 = int(input())
    
    print(f1())",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1383,"def f1():
    pass


if __name__ == '__main__':
    v1 = int(input())
    v2 = int(input())
    v3 = int(input())
    
    print(f1())",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1384,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.rubles * 100 + f1_p1.cents


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())
    
    print(f3(v4, v1(rubles=v2, cents=v2)))",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1385,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.rubles * 100 + f1_p1.cents


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())
    
    print(f3(v4, v1(rubles=v2, cents=v3)))",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1386,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())
    
    print(f3(v4, v1(rubles=v2, cents=v3)))",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1387,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f3(v4, v1(rubles=v2, cents=v3)))",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1389,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f3(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1390,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])



def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f3(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1391,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])




def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f3(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1392,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])





def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> int:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f1(f3_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f3(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1400,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> None:
    print(f1_p1.v2, f1_p1.v3)


def f2(f2_p1: v1) -> int:
    return f2_p1.v2 * 100 + f2_p1.v3


def f3(f3_p1: int) -> v1:
    return v1(*divmod(f3_p1, 100))


def f4(f4_p1: int, f4_p2: v1) -> int:
    f4_v1: int = f2(f4_p2)
    f4_v2: v1 = f3(f4_p1 * f4_v1)
    return f2(f4_v2)


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f4(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1401,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> None:
    print(f1_p1.v2, f1_p1.v3)


def f2(f2_p1: v1) -> int:
    return f2_p1.v2 * 100 + f2_p1.v3


def f3(f3_p1: int) -> v1:
    return v1(*divmod(f3_p1, 100))


def f4(f4_p1: int, f4_p2: v1) -> v1:
    f4_v1: int = f2(f4_p2)
    f4_v2: v1 = f3(f4_p1 * f4_v1)
    return f4_v2


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    f1(f4(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,1.0,pies
1402,"from collections import namedtuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> None:
    print(f1_p1.v2, f1_p1.v3)


def f2(f2_p1: v1) -> int:
    return f2_p1.v2 * 100 + f2_p1.v3


def f3(f3_p1: int) -> v1:
    return v1(*divmod(f3_p1, 100))


def f4(f4_p1: int, f4_p2: v1) -> v1:
    f4_v1: int = f2(f4_p2)
    f4_v2: v1 = f3(f4_p1 * f4_v1)
    return f4_v2


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f4(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1403,"from collections import namedtuple
from typing import Tuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> None:
    print(f1_p1.v2, f1_p1.v3)


def f2(f2_p1: v1) -> int:
    return f2_p1.v2 * 100 + f2_p1.v3


def f3(f3_p1: int) -> v1:
    return v1(*divmod(f3_p1, 100))


def f4(f4_p1: int, f4_p2: v1) -> Tuple[int, int]:
    f4_v1: int = f2(f4_p2)
    f4_v2: v1 = f3(f4_p1 * f4_v1)
    return f4_v2


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f4(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1405,"from collections import namedtuple
from typing import Tuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> None:
    print(f1_p1.v2, f1_p1.v3)


def f2(f2_p1: v1) -> int:
    return f2_p1.v2 * 100 + f2_p1.v3


def f3(f3_p1: int) -> v1:
    return v1(*divmod(f3_p1, 100))


def f4(f4_p1: int, f4_p2: v1) -> Tuple[int, int]:
    f4_v1: int = f2(f4_p2)
    f4_v2: v1 = f3(f4_p1 * f4_v1)
    return f4_v2.v2, f4_v2.v3


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f4(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1406,"from collections import namedtuple
from typing import Tuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> Tuple[int, int]:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f3_v2.v2, f3_v2.v3


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(f3(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,0.0,pies
1407,"from collections import namedtuple
from typing import Tuple

v1 = namedtuple(""Price"", [""rubles"", ""cents""])


def f1(f1_p1: v1) -> int:
    return f1_p1.v2 * 100 + f1_p1.v3


def f2(f2_p1: int) -> v1:
    return v1(*divmod(f2_p1, 100))


def f3(f3_p1: int, f3_p2: v1) -> Tuple[int, int]:
    f3_v1: int = f1(f3_p2)
    f3_v2: v1 = f2(f3_p1 * f3_v1)
    return f3_v2.v2, f3_v2.v3


if __name__ == '__main__':
    v2 = int(input())
    v3 = int(input())
    v4 = int(input())

    print(*f3(v4, v1(v2, v3)))
",23,FROM_FOUR_TO_SIX_YEARS,1.0,pies
